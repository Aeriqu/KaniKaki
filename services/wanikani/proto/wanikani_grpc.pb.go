// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v4.22.3
// source: services/wanikani/proto/wanikani.proto

package wanikani

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// WaniKaniClient is the client API for WaniKani service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type WaniKaniClient interface {
	GetAllKanji(ctx context.Context, in *WaniKaniTokenRequest, opts ...grpc.CallOption) (WaniKani_GetAllKanjiClient, error)
}

type waniKaniClient struct {
	cc grpc.ClientConnInterface
}

func NewWaniKaniClient(cc grpc.ClientConnInterface) WaniKaniClient {
	return &waniKaniClient{cc}
}

func (c *waniKaniClient) GetAllKanji(ctx context.Context, in *WaniKaniTokenRequest, opts ...grpc.CallOption) (WaniKani_GetAllKanjiClient, error) {
	stream, err := c.cc.NewStream(ctx, &WaniKani_ServiceDesc.Streams[0], "/aeriqu.kanikaki.wanikani.WaniKani/GetAllKanji", opts...)
	if err != nil {
		return nil, err
	}
	x := &waniKaniGetAllKanjiClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type WaniKani_GetAllKanjiClient interface {
	Recv() (*KanjiResponse, error)
	grpc.ClientStream
}

type waniKaniGetAllKanjiClient struct {
	grpc.ClientStream
}

func (x *waniKaniGetAllKanjiClient) Recv() (*KanjiResponse, error) {
	m := new(KanjiResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// WaniKaniServer is the server API for WaniKani service.
// All implementations must embed UnimplementedWaniKaniServer
// for forward compatibility
type WaniKaniServer interface {
	GetAllKanji(*WaniKaniTokenRequest, WaniKani_GetAllKanjiServer) error
	mustEmbedUnimplementedWaniKaniServer()
}

// UnimplementedWaniKaniServer must be embedded to have forward compatible implementations.
type UnimplementedWaniKaniServer struct {
}

func (UnimplementedWaniKaniServer) GetAllKanji(*WaniKaniTokenRequest, WaniKani_GetAllKanjiServer) error {
	return status.Errorf(codes.Unimplemented, "method GetAllKanji not implemented")
}
func (UnimplementedWaniKaniServer) mustEmbedUnimplementedWaniKaniServer() {}

// UnsafeWaniKaniServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to WaniKaniServer will
// result in compilation errors.
type UnsafeWaniKaniServer interface {
	mustEmbedUnimplementedWaniKaniServer()
}

func RegisterWaniKaniServer(s grpc.ServiceRegistrar, srv WaniKaniServer) {
	s.RegisterService(&WaniKani_ServiceDesc, srv)
}

func _WaniKani_GetAllKanji_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WaniKaniTokenRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(WaniKaniServer).GetAllKanji(m, &waniKaniGetAllKanjiServer{stream})
}

type WaniKani_GetAllKanjiServer interface {
	Send(*KanjiResponse) error
	grpc.ServerStream
}

type waniKaniGetAllKanjiServer struct {
	grpc.ServerStream
}

func (x *waniKaniGetAllKanjiServer) Send(m *KanjiResponse) error {
	return x.ServerStream.SendMsg(m)
}

// WaniKani_ServiceDesc is the grpc.ServiceDesc for WaniKani service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var WaniKani_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "aeriqu.kanikaki.wanikani.WaniKani",
	HandlerType: (*WaniKaniServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetAllKanji",
			Handler:       _WaniKani_GetAllKanji_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "services/wanikani/proto/wanikani.proto",
}
